!function(){var __webpack_modules__={"./node_modules/tom-select/dist/js/tom-select.complete.js":function(module){module.exports=function(){"use strict";function forEvents(events,callback){events.split(/\s+/).forEach((event=>{callback(event)}))}class MicroEvent{constructor(){this._events=void 0,this._events={}}on(events,fct){forEvents(events,(event=>{const event_array=this._events[event]||[];event_array.push(fct),this._events[event]=event_array}))}off(events,fct){var n=arguments.length;0!==n?forEvents(events,(event=>{if(1===n)return void delete this._events[event];const event_array=this._events[event];void 0!==event_array&&(event_array.splice(event_array.indexOf(fct),1),this._events[event]=event_array)})):this._events={}}trigger(events,...args){var self=this;forEvents(events,(event=>{const event_array=self._events[event];void 0!==event_array&&event_array.forEach((fct=>{fct.apply(self,args)}))}))}}function MicroPlugin(Interface){return Interface.plugins={},class extends Interface{constructor(...args){super(...args),this.plugins={names:[],settings:{},requested:{},loaded:{}}}static define(name,fn){Interface.plugins[name]={name:name,fn:fn}}initializePlugins(plugins){var key,name;const self=this,queue=[];if(Array.isArray(plugins))plugins.forEach((plugin=>{"string"==typeof plugin?queue.push(plugin):(self.plugins.settings[plugin.name]=plugin.options,queue.push(plugin.name))}));else if(plugins)for(key in plugins)plugins.hasOwnProperty(key)&&(self.plugins.settings[key]=plugins[key],queue.push(key));for(;name=queue.shift();)self.require(name)}loadPlugin(name){var self=this,plugins=self.plugins,plugin=Interface.plugins[name];if(!Interface.plugins.hasOwnProperty(name))throw new Error('Unable to find "'+name+'" plugin');plugins.requested[name]=!0,plugins.loaded[name]=plugin.fn.apply(self,[self.plugins.settings[name]||{}]),plugins.names.push(name)}require(name){var self=this,plugins=self.plugins;if(!self.plugins.loaded.hasOwnProperty(name)){if(plugins.requested[name])throw new Error('Plugin has circular dependency ("'+name+'")');self.loadPlugin(name)}return plugins.loaded[name]}}}const arrayToPattern=chars=>(chars=chars.filter(Boolean)).length<2?chars[0]||"":1==maxValueLength(chars)?"["+chars.join("")+"]":"(?:"+chars.join("|")+")",sequencePattern=array=>{if(!hasDuplicates(array))return array.join("");let pattern="",prev_char_count=0;const prev_pattern=()=>{prev_char_count>1&&(pattern+="{"+prev_char_count+"}")};return array.forEach(((char,i)=>{char!==array[i-1]?(prev_pattern(),pattern+=char,prev_char_count=1):prev_char_count++})),prev_pattern(),pattern},setToPattern=chars=>{let array=toArray(chars);return arrayToPattern(array)},hasDuplicates=array=>new Set(array).size!==array.length,escape_regex=str=>(str+"").replace(/([\$\(\)\*\+\.\?\[\]\^\{\|\}\\])/gu,"\\$1"),maxValueLength=array=>array.reduce(((longest,value)=>Math.max(longest,unicodeLength(value))),0),unicodeLength=str=>toArray(str).length,toArray=p=>Array.from(p),allSubstrings=input=>{if(1===input.length)return[[input]];let result=[];const start=input.substring(1);return allSubstrings(start).forEach((function(subresult){let tmp=subresult.slice(0);tmp[0]=input.charAt(0)+tmp[0],result.push(tmp),tmp=subresult.slice(0),tmp.unshift(input.charAt(0)),result.push(tmp)})),result},code_points=[[0,65535]],accent_pat="[̀-ͯ·ʾ]";let unicode_map,multi_char_reg;const max_char_length=3,latin_convert={"æ":"ae","ⱥ":"a","ø":"o","⁄":"/","∕":"/"},convert_pat=new RegExp(Object.keys(latin_convert).join("|")+"|"+accent_pat,"gu"),initialize=_code_points=>{void 0===unicode_map&&(unicode_map=generateMap(_code_points||code_points))},normalize=(str,form="NFKD")=>str.normalize(form),decompose=str=>str.match(/[\u0f71-\u0f81]/)?toArray(str).reduce(((result,char)=>result+normalize(char)),""):normalize(str),asciifold=str=>decompose(str).toLowerCase().replace(convert_pat,(char=>latin_convert[char]||""));function*generator(code_points){for(const[code_point_min,code_point_max]of code_points)for(let i=code_point_min;i<=code_point_max;i++){let composed=String.fromCharCode(i),folded=asciifold(composed);if(folded==composed.toLowerCase())continue;if(folded.length>max_char_length)continue;if(0==folded.length)continue;let decomposed=normalize(composed);normalize(decomposed,"NFC")===composed&&folded===decomposed||(yield{folded:folded,composed:composed,code_point:i})}}const generateSets=code_points=>{const unicode_sets={},addMatching=(folded,to_add)=>{const folded_set=unicode_sets[folded]||new Set,patt=new RegExp("^"+setToPattern(folded_set)+"$","iu");to_add.match(patt)||(folded_set.add(escape_regex(to_add)),unicode_sets[folded]=folded_set)};for(let value of generator(code_points))addMatching(value.folded,value.folded),addMatching(value.folded,value.composed);return unicode_sets},generateMap=code_points=>{const unicode_sets=generateSets(code_points),unicode_map={};let multi_char=[];for(let folded in unicode_sets){let set=unicode_sets[folded];set&&(unicode_map[folded]=setToPattern(set)),folded.length>1&&multi_char.push(escape_regex(folded))}multi_char.sort(((a,b)=>b.length-a.length));const multi_char_patt=arrayToPattern(multi_char);return multi_char_reg=new RegExp("^"+multi_char_patt,"u"),unicode_map},mapSequence=(strings,min_replacement=1)=>{let chars_replaced=0;return strings=strings.map((str=>(unicode_map[str]&&(chars_replaced+=str.length),unicode_map[str]||str))),chars_replaced>=min_replacement?sequencePattern(strings):""},substringsToPattern=(str,min_replacement=1)=>(min_replacement=Math.max(min_replacement,str.length-1),arrayToPattern(allSubstrings(str).map((sub_pat=>mapSequence(sub_pat,min_replacement))))),sequencesToPattern=(sequences,all=!0)=>{let min_replacement=sequences.length>1?1:0;return arrayToPattern(sequences.map((sequence=>{let seq=[];const len=all?sequence.length():sequence.length()-1;for(let j=0;j<len;j++)seq.push(substringsToPattern(sequence.substrs[j]||"",min_replacement));return sequencePattern(seq)})))},inSequences=(needle_seq,sequences)=>{for(const seq of sequences){if(seq.start!=needle_seq.start||seq.end!=needle_seq.end)continue;if(seq.substrs.join("")!==needle_seq.substrs.join(""))continue;let needle_parts=needle_seq.parts;const filter=part=>{for(const needle_part of needle_parts){if(needle_part.start===part.start&&needle_part.substr===part.substr)return!1;if(1!=part.length&&1!=needle_part.length){if(part.start<needle_part.start&&part.end>needle_part.start)return!0;if(needle_part.start<part.start&&needle_part.end>part.start)return!0}}return!1};if(!(seq.parts.filter(filter).length>0))return!0}return!1};class Sequence{constructor(){this.parts=[],this.substrs=[],this.start=0,this.end=0}add(part){part&&(this.parts.push(part),this.substrs.push(part.substr),this.start=Math.min(part.start,this.start),this.end=Math.max(part.end,this.end))}last(){return this.parts[this.parts.length-1]}length(){return this.parts.length}clone(position,last_piece){let clone=new Sequence,parts=JSON.parse(JSON.stringify(this.parts)),last_part=parts.pop();for(const part of parts)clone.add(part);let last_substr=last_piece.substr.substring(0,position-last_part.start),clone_last_len=last_substr.length;return clone.add({start:last_part.start,end:last_part.start+clone_last_len,length:clone_last_len,substr:last_substr}),clone}}const getPattern=str=>{initialize(),str=asciifold(str);let pattern="",sequences=[new Sequence];for(let i=0;i<str.length;i++){let match=str.substring(i).match(multi_char_reg);const char=str.substring(i,i+1),match_str=match?match[0]:null;let overlapping=[],added_types=new Set;for(const sequence of sequences){const last_piece=sequence.last();if(!last_piece||1==last_piece.length||last_piece.end<=i)if(match_str){const len=match_str.length;sequence.add({start:i,end:i+len,length:len,substr:match_str}),added_types.add("1")}else sequence.add({start:i,end:i+1,length:1,substr:char}),added_types.add("2");else if(match_str){let clone=sequence.clone(i,last_piece);const len=match_str.length;clone.add({start:i,end:i+len,length:len,substr:match_str}),overlapping.push(clone)}else added_types.add("3")}if(overlapping.length>0){overlapping=overlapping.sort(((a,b)=>a.length()-b.length()));for(let clone of overlapping)inSequences(clone,sequences)||sequences.push(clone)}else if(i>0&&1==added_types.size&&!added_types.has("3")){pattern+=sequencesToPattern(sequences,!1);let new_seq=new Sequence;const old_seq=sequences[0];old_seq&&new_seq.add(old_seq.last()),sequences=[new_seq]}}return pattern+=sequencesToPattern(sequences,!0),pattern},getAttr=(obj,name)=>{if(obj)return obj[name]},getAttrNesting=(obj,name)=>{if(obj){for(var part,names=name.split(".");(part=names.shift())&&(obj=obj[part]););return obj}},scoreValue=(value,token,weight)=>{var score,pos;return value?(value+="",null==token.regex||-1===(pos=value.search(token.regex))?0:(score=token.string.length/value.length,0===pos&&(score+=.5),score*weight)):0},propToArray=(obj,key)=>{var value=obj[key];if("function"==typeof value)return value;value&&!Array.isArray(value)&&(obj[key]=[value])},iterate$1=(object,callback)=>{if(Array.isArray(object))object.forEach(callback);else for(var key in object)object.hasOwnProperty(key)&&callback(object[key],key)},cmp=(a,b)=>"number"==typeof a&&"number"==typeof b?a>b?1:a<b?-1:0:(a=asciifold(a+"").toLowerCase())>(b=asciifold(b+"").toLowerCase())?1:b>a?-1:0;class Sifter{constructor(items,settings){this.items=void 0,this.settings=void 0,this.items=items,this.settings=settings||{diacritics:!0}}tokenize(query,respect_word_boundaries,weights){if(!query||!query.length)return[];const tokens=[],words=query.split(/\s+/);var field_regex;return weights&&(field_regex=new RegExp("^("+Object.keys(weights).map(escape_regex).join("|")+"):(.*)$")),words.forEach((word=>{let field_match,field=null,regex=null;field_regex&&(field_match=word.match(field_regex))&&(field=field_match[1],word=field_match[2]),word.length>0&&(regex=this.settings.diacritics?getPattern(word)||null:escape_regex(word),regex&&respect_word_boundaries&&(regex="\\b"+regex)),tokens.push({string:word,regex:regex?new RegExp(regex,"iu"):null,field:field})})),tokens}getScoreFunction(query,options){var search=this.prepareSearch(query,options);return this._getScoreFunction(search)}_getScoreFunction(search){const tokens=search.tokens,token_count=tokens.length;if(!token_count)return function(){return 0};const fields=search.options.fields,weights=search.weights,field_count=fields.length,getAttrFn=search.getAttrFn;if(!field_count)return function(){return 1};const scoreObject=1===field_count?function(token,data){const field=fields[0].field;return scoreValue(getAttrFn(data,field),token,weights[field]||1)}:function(token,data){var sum=0;if(token.field){const value=getAttrFn(data,token.field);!token.regex&&value?sum+=1/field_count:sum+=scoreValue(value,token,1)}else iterate$1(weights,((weight,field)=>{sum+=scoreValue(getAttrFn(data,field),token,weight)}));return sum/field_count};return 1===token_count?function(data){return scoreObject(tokens[0],data)}:"and"===search.options.conjunction?function(data){var score,sum=0;for(let token of tokens){if((score=scoreObject(token,data))<=0)return 0;sum+=score}return sum/token_count}:function(data){var sum=0;return iterate$1(tokens,(token=>{sum+=scoreObject(token,data)})),sum/token_count}}getSortFunction(query,options){var search=this.prepareSearch(query,options);return this._getSortFunction(search)}_getSortFunction(search){var implicit_score,sort_flds=[];const self=this,options=search.options,sort=!search.query&&options.sort_empty?options.sort_empty:options.sort;if("function"==typeof sort)return sort.bind(this);const get_field=function(name,result){return"$score"===name?result.score:search.getAttrFn(self.items[result.id],name)};if(sort)for(let s of sort)(search.query||"$score"!==s.field)&&sort_flds.push(s);if(search.query){implicit_score=!0;for(let fld of sort_flds)if("$score"===fld.field){implicit_score=!1;break}implicit_score&&sort_flds.unshift({field:"$score",direction:"desc"})}else sort_flds=sort_flds.filter((fld=>"$score"!==fld.field));return sort_flds.length?function(a,b){var result,field;for(let sort_fld of sort_flds)if(field=sort_fld.field,result=("desc"===sort_fld.direction?-1:1)*cmp(get_field(field,a),get_field(field,b)))return result;return 0}:null}prepareSearch(query,optsUser){const weights={};var options=Object.assign({},optsUser);if(propToArray(options,"sort"),propToArray(options,"sort_empty"),options.fields){propToArray(options,"fields");const fields=[];options.fields.forEach((field=>{"string"==typeof field&&(field={field:field,weight:1}),fields.push(field),weights[field.field]="weight"in field?field.weight:1})),options.fields=fields}return{options:options,query:query.toLowerCase().trim(),tokens:this.tokenize(query,options.respect_word_boundaries,weights),total:0,items:[],weights:weights,getAttrFn:options.nesting?getAttrNesting:getAttr}}search(query,options){var score,search,self=this;search=this.prepareSearch(query,options),options=search.options,query=search.query;const fn_score=options.score||self._getScoreFunction(search);query.length?iterate$1(self.items,((item,id)=>{score=fn_score(item),(!1===options.filter||score>0)&&search.items.push({score:score,id:id})})):iterate$1(self.items,((_,id)=>{search.items.push({score:1,id:id})}));const fn_sort=self._getSortFunction(search);return fn_sort&&search.items.sort(fn_sort),search.total=search.items.length,"number"==typeof options.limit&&(search.items=search.items.slice(0,options.limit)),search}}const iterate=(object,callback)=>{if(Array.isArray(object))object.forEach(callback);else for(var key in object)object.hasOwnProperty(key)&&callback(object[key],key)},getDom=query=>{if(query.jquery)return query[0];if(query instanceof HTMLElement)return query;if(isHtmlString(query)){var tpl=document.createElement("template");return tpl.innerHTML=query.trim(),tpl.content.firstChild}return document.querySelector(query)},isHtmlString=arg=>"string"==typeof arg&&arg.indexOf("<")>-1,escapeQuery=query=>query.replace(/['"\\]/g,"\\$&"),triggerEvent=(dom_el,event_name)=>{var event=document.createEvent("HTMLEvents");event.initEvent(event_name,!0,!1),dom_el.dispatchEvent(event)},applyCSS=(dom_el,css)=>{Object.assign(dom_el.style,css)},addClasses=(elmts,...classes)=>{var norm_classes=classesArray(classes);(elmts=castAsArray(elmts)).map((el=>{norm_classes.map((cls=>{el.classList.add(cls)}))}))},removeClasses=(elmts,...classes)=>{var norm_classes=classesArray(classes);(elmts=castAsArray(elmts)).map((el=>{norm_classes.map((cls=>{el.classList.remove(cls)}))}))},classesArray=args=>{var classes=[];return iterate(args,(_classes=>{"string"==typeof _classes&&(_classes=_classes.trim().split(/[\11\12\14\15\40]/)),Array.isArray(_classes)&&(classes=classes.concat(_classes))})),classes.filter(Boolean)},castAsArray=arg=>(Array.isArray(arg)||(arg=[arg]),arg),parentMatch=(target,selector,wrapper)=>{if(!wrapper||wrapper.contains(target))for(;target&&target.matches;){if(target.matches(selector))return target;target=target.parentNode}},getTail=(list,direction=0)=>direction>0?list[list.length-1]:list[0],isEmptyObject=obj=>0===Object.keys(obj).length,nodeIndex=(el,amongst)=>{if(!el)return-1;amongst=amongst||el.nodeName;for(var i=0;el=el.previousElementSibling;)el.matches(amongst)&&i++;return i},setAttr=(el,attrs)=>{iterate(attrs,((val,attr)=>{null==val?el.removeAttribute(attr):el.setAttribute(attr,""+val)}))},replaceNode=(existing,replacement)=>{existing.parentNode&&existing.parentNode.replaceChild(replacement,existing)},highlight=(element,regex)=>{if(null===regex)return;if("string"==typeof regex){if(!regex.length)return;regex=new RegExp(regex,"i")}const highlightText=node=>{var match=node.data.match(regex);if(match&&node.data.length>0){var spannode=document.createElement("span");spannode.className="highlight";var middlebit=node.splitText(match.index);middlebit.splitText(match[0].length);var middleclone=middlebit.cloneNode(!0);return spannode.appendChild(middleclone),replaceNode(middlebit,spannode),1}return 0},highlightChildren=node=>{1!==node.nodeType||!node.childNodes||/(script|style)/i.test(node.tagName)||"highlight"===node.className&&"SPAN"===node.tagName||Array.from(node.childNodes).forEach((element=>{highlightRecursive(element)}))},highlightRecursive=node=>3===node.nodeType?highlightText(node):(highlightChildren(node),0);highlightRecursive(element)},removeHighlight=el=>{var elements=el.querySelectorAll("span.highlight");Array.prototype.forEach.call(elements,(function(el){var parent=el.parentNode;parent.replaceChild(el.firstChild,el),parent.normalize()}))},KEY_A=65,KEY_RETURN=13,KEY_ESC=27,KEY_LEFT=37,KEY_UP=38,KEY_RIGHT=39,KEY_DOWN=40,KEY_BACKSPACE=8,KEY_DELETE=46,KEY_TAB=9,KEY_SHORTCUT="undefined"!=typeof navigator&&/Mac/.test(navigator.userAgent)?"metaKey":"ctrlKey";var defaults={options:[],optgroups:[],plugins:[],delimiter:",",splitOn:null,persist:!0,diacritics:!0,create:null,createOnBlur:!1,createFilter:null,highlight:!0,openOnFocus:!0,shouldOpen:null,maxOptions:50,maxItems:null,hideSelected:null,duplicates:!1,addPrecedence:!1,selectOnTab:!1,preload:null,allowEmptyOption:!1,loadThrottle:300,loadingClass:"loading",dataAttr:null,optgroupField:"optgroup",valueField:"value",labelField:"text",disabledField:"disabled",optgroupLabelField:"label",optgroupValueField:"value",lockOptgroupOrder:!1,sortField:"$order",searchField:["text"],searchConjunction:"and",mode:null,wrapperClass:"ts-wrapper",controlClass:"ts-control",dropdownClass:"ts-dropdown",dropdownContentClass:"ts-dropdown-content",itemClass:"item",optionClass:"option",dropdownParent:null,controlInput:'<input type="text" autocomplete="off" size="1" />',copyClassesToDropdown:!1,placeholder:null,hidePlaceholder:null,shouldLoad:function(query){return query.length>0},render:{}};const hash_key=value=>null==value?null:get_hash(value),get_hash=value=>"boolean"==typeof value?value?"1":"0":value+"",escape_html=str=>(str+"").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;"),loadDebounce=(fn,delay)=>{var timeout;return function(value,callback){var self=this;timeout&&(self.loading=Math.max(self.loading-1,0),clearTimeout(timeout)),timeout=setTimeout((function(){timeout=null,self.loadedSearches[value]=!0,fn.call(self,value,callback)}),delay)}},debounce_events=(self,types,fn)=>{var type,trigger=self.trigger,event_args={};for(type of(self.trigger=function(){var type=arguments[0];if(-1===types.indexOf(type))return trigger.apply(self,arguments);event_args[type]=arguments},fn.apply(self,[]),self.trigger=trigger,types))type in event_args&&trigger.apply(self,event_args[type])},getSelection=input=>({start:input.selectionStart||0,length:(input.selectionEnd||0)-(input.selectionStart||0)}),preventDefault=(evt,stop=!1)=>{evt&&(evt.preventDefault(),stop&&evt.stopPropagation())},addEvent=(target,type,callback,options)=>{target.addEventListener(type,callback,options)},isKeyDown=(key_name,evt)=>!!evt&&!!evt[key_name]&&1==(evt.altKey?1:0)+(evt.ctrlKey?1:0)+(evt.shiftKey?1:0)+(evt.metaKey?1:0),getId=(el,id)=>{const existing_id=el.getAttribute("id");return existing_id||(el.setAttribute("id",id),id)},addSlashes=str=>str.replace(/[\\"']/g,"\\$&"),append=(parent,node)=>{node&&parent.append(node)};function getSettings(input,settings_user){var settings=Object.assign({},defaults,settings_user),attr_data=settings.dataAttr,field_label=settings.labelField,field_value=settings.valueField,field_disabled=settings.disabledField,field_optgroup=settings.optgroupField,field_optgroup_label=settings.optgroupLabelField,field_optgroup_value=settings.optgroupValueField,tag_name=input.tagName.toLowerCase(),placeholder=input.getAttribute("placeholder")||input.getAttribute("data-placeholder");if(!placeholder&&!settings.allowEmptyOption){let option=input.querySelector('option[value=""]');option&&(placeholder=option.textContent)}var tagName,options,optionsMap,group_count,readData,addOption,addGroup,settings_element={placeholder:placeholder,options:[],optgroups:[],items:[],maxItems:null},init_textbox=()=>{const data_raw=input.getAttribute(attr_data);if(data_raw)settings_element.options=JSON.parse(data_raw),iterate(settings_element.options,(opt=>{settings_element.items.push(opt[field_value])}));else{var value=input.value.trim()||"";if(!settings.allowEmptyOption&&!value.length)return;const values=value.split(settings.delimiter);iterate(values,(value=>{const option={};option[field_label]=value,option[field_value]=value,settings_element.options.push(option)})),settings_element.items=values}};return"select"===tag_name?(options=settings_element.options,optionsMap={},group_count=1,readData=el=>{var data=Object.assign({},el.dataset),json=attr_data&&data[attr_data];return"string"==typeof json&&json.length&&(data=Object.assign(data,JSON.parse(json))),data},addOption=(option,group)=>{var value=hash_key(option.value);if(null!=value&&(value||settings.allowEmptyOption)){if(optionsMap.hasOwnProperty(value)){if(group){var arr=optionsMap[value][field_optgroup];arr?Array.isArray(arr)?arr.push(group):optionsMap[value][field_optgroup]=[arr,group]:optionsMap[value][field_optgroup]=group}}else{var option_data=readData(option);option_data[field_label]=option_data[field_label]||option.textContent,option_data[field_value]=option_data[field_value]||value,option_data[field_disabled]=option_data[field_disabled]||option.disabled,option_data[field_optgroup]=option_data[field_optgroup]||group,option_data.$option=option,optionsMap[value]=option_data,options.push(option_data)}option.selected&&settings_element.items.push(value)}},addGroup=optgroup=>{var id,optgroup_data;(optgroup_data=readData(optgroup))[field_optgroup_label]=optgroup_data[field_optgroup_label]||optgroup.getAttribute("label")||"",optgroup_data[field_optgroup_value]=optgroup_data[field_optgroup_value]||group_count++,optgroup_data[field_disabled]=optgroup_data[field_disabled]||optgroup.disabled,settings_element.optgroups.push(optgroup_data),id=optgroup_data[field_optgroup_value],iterate(optgroup.children,(option=>{addOption(option,id)}))},settings_element.maxItems=input.hasAttribute("multiple")?null:1,iterate(input.children,(child=>{"optgroup"===(tagName=child.tagName.toLowerCase())?addGroup(child):"option"===tagName&&addOption(child)}))):init_textbox(),Object.assign({},defaults,settings_element,settings_user)}var instance_i=0;class TomSelect extends(MicroPlugin(MicroEvent)){constructor(input_arg,user_settings){var dir;super(),this.control_input=void 0,this.wrapper=void 0,this.dropdown=void 0,this.control=void 0,this.dropdown_content=void 0,this.focus_node=void 0,this.order=0,this.settings=void 0,this.input=void 0,this.tabIndex=void 0,this.is_select_tag=void 0,this.rtl=void 0,this.inputId=void 0,this._destroy=void 0,this.sifter=void 0,this.isOpen=!1,this.isDisabled=!1,this.isRequired=void 0,this.isInvalid=!1,this.isValid=!0,this.isLocked=!1,this.isFocused=!1,this.isInputHidden=!1,this.isSetup=!1,this.ignoreFocus=!1,this.ignoreHover=!1,this.hasOptions=!1,this.currentResults=void 0,this.lastValue="",this.caretPos=0,this.loading=0,this.loadedSearches={},this.activeOption=null,this.activeItems=[],this.optgroups={},this.options={},this.userOptions={},this.items=[],instance_i++;var input=getDom(input_arg);if(input.tomselect)throw new Error("Tom Select already initialized on this element");input.tomselect=this,dir=(window.getComputedStyle&&window.getComputedStyle(input,null)).getPropertyValue("direction");const settings=getSettings(input,user_settings);this.settings=settings,this.input=input,this.tabIndex=input.tabIndex||0,this.is_select_tag="select"===input.tagName.toLowerCase(),this.rtl=/rtl/i.test(dir),this.inputId=getId(input,"tomselect-"+instance_i),this.isRequired=input.required,this.sifter=new Sifter(this.options,{diacritics:settings.diacritics}),settings.mode=settings.mode||(1===settings.maxItems?"single":"multi"),"boolean"!=typeof settings.hideSelected&&(settings.hideSelected="multi"===settings.mode),"boolean"!=typeof settings.hidePlaceholder&&(settings.hidePlaceholder="multi"!==settings.mode);var filter=settings.createFilter;"function"!=typeof filter&&("string"==typeof filter&&(filter=new RegExp(filter)),filter instanceof RegExp?settings.createFilter=input=>filter.test(input):settings.createFilter=value=>this.settings.duplicates||!this.options[value]),this.initializePlugins(settings.plugins),this.setupCallbacks(),this.setupTemplates();const wrapper=getDom("<div>"),control=getDom("<div>"),dropdown=this._render("dropdown"),dropdown_content=getDom('<div role="listbox" tabindex="-1">'),classes=this.input.getAttribute("class")||"",inputMode=settings.mode;var control_input;addClasses(wrapper,settings.wrapperClass,classes,inputMode),addClasses(control,settings.controlClass),append(wrapper,control),addClasses(dropdown,settings.dropdownClass,inputMode),settings.copyClassesToDropdown&&addClasses(dropdown,classes),addClasses(dropdown_content,settings.dropdownContentClass),append(dropdown,dropdown_content),getDom(settings.dropdownParent||wrapper).appendChild(dropdown),isHtmlString(settings.controlInput)?(control_input=getDom(settings.controlInput),iterate$1(["autocorrect","autocapitalize","autocomplete"],(attr=>{input.getAttribute(attr)&&setAttr(control_input,{[attr]:input.getAttribute(attr)})})),control_input.tabIndex=-1,control.appendChild(control_input),this.focus_node=control_input):settings.controlInput?(control_input=getDom(settings.controlInput),this.focus_node=control_input):(control_input=getDom("<input/>"),this.focus_node=control),this.wrapper=wrapper,this.dropdown=dropdown,this.dropdown_content=dropdown_content,this.control=control,this.control_input=control_input,this.setup()}setup(){const self=this,settings=self.settings,control_input=self.control_input,dropdown=self.dropdown,dropdown_content=self.dropdown_content,wrapper=self.wrapper,control=self.control,input=self.input,focus_node=self.focus_node,passive_event={passive:!0},listboxId=self.inputId+"-ts-dropdown";setAttr(dropdown_content,{id:listboxId}),setAttr(focus_node,{role:"combobox","aria-haspopup":"listbox","aria-expanded":"false","aria-controls":listboxId});const control_id=getId(focus_node,self.inputId+"-ts-control"),query="label[for='"+escapeQuery(self.inputId)+"']",label=document.querySelector(query),label_click=self.focus.bind(self);if(label){addEvent(label,"click",label_click),setAttr(label,{for:control_id});const label_id=getId(label,self.inputId+"-ts-label");setAttr(focus_node,{"aria-labelledby":label_id}),setAttr(dropdown_content,{"aria-labelledby":label_id})}if(wrapper.style.width=input.style.width,self.plugins.names.length){const classes_plugins="plugin-"+self.plugins.names.join(" plugin-");addClasses([wrapper,dropdown],classes_plugins)}(null===settings.maxItems||settings.maxItems>1)&&self.is_select_tag&&setAttr(input,{multiple:"multiple"}),settings.placeholder&&setAttr(control_input,{placeholder:settings.placeholder}),!settings.splitOn&&settings.delimiter&&(settings.splitOn=new RegExp("\\s*"+escape_regex(settings.delimiter)+"+\\s*")),settings.load&&settings.loadThrottle&&(settings.load=loadDebounce(settings.load,settings.loadThrottle)),self.control_input.type=input.type,addEvent(dropdown,"mousemove",(()=>{self.ignoreHover=!1})),addEvent(dropdown,"mouseenter",(e=>{var target_match=parentMatch(e.target,"[data-selectable]",dropdown);target_match&&self.onOptionHover(e,target_match)}),{capture:!0}),addEvent(dropdown,"click",(evt=>{const option=parentMatch(evt.target,"[data-selectable]");option&&(self.onOptionSelect(evt,option),preventDefault(evt,!0))})),addEvent(control,"click",(evt=>{var target_match=parentMatch(evt.target,"[data-ts-item]",control);target_match&&self.onItemSelect(evt,target_match)?preventDefault(evt,!0):""==control_input.value&&(self.onClick(),preventDefault(evt,!0))})),addEvent(focus_node,"keydown",(e=>self.onKeyDown(e))),addEvent(control_input,"keypress",(e=>self.onKeyPress(e))),addEvent(control_input,"input",(e=>self.onInput(e))),addEvent(focus_node,"resize",(()=>self.positionDropdown()),passive_event),addEvent(focus_node,"blur",(e=>self.onBlur(e))),addEvent(focus_node,"focus",(e=>self.onFocus(e))),addEvent(control_input,"paste",(e=>self.onPaste(e)));const doc_mousedown=evt=>{const target=evt.composedPath()[0];if(!wrapper.contains(target)&&!dropdown.contains(target))return self.isFocused&&self.blur(),void self.inputState();target==control_input&&self.isOpen?evt.stopPropagation():preventDefault(evt,!0)},win_scroll=()=>{self.isOpen&&self.positionDropdown()};addEvent(document,"mousedown",doc_mousedown),addEvent(window,"scroll",win_scroll,passive_event),addEvent(window,"resize",win_scroll,passive_event),this._destroy=()=>{document.removeEventListener("mousedown",doc_mousedown),window.removeEventListener("scroll",win_scroll),window.removeEventListener("resize",win_scroll),label&&label.removeEventListener("click",label_click)},this.revertSettings={innerHTML:input.innerHTML,tabIndex:input.tabIndex},input.tabIndex=-1,input.insertAdjacentElement("afterend",self.wrapper),self.sync(!1),settings.items=[],delete settings.optgroups,delete settings.options,addEvent(input,"invalid",(()=>{self.isValid&&(self.isValid=!1,self.isInvalid=!0,self.refreshState())})),self.updateOriginalInput(),self.refreshItems(),self.close(!1),self.inputState(),self.isSetup=!0,input.disabled?self.disable():self.enable(),self.on("change",this.onChange),addClasses(input,"tomselected","ts-hidden-accessible"),self.trigger("initialize"),!0===settings.preload&&self.preload()}setupOptions(options=[],optgroups=[]){this.addOptions(options),iterate$1(optgroups,(optgroup=>{this.registerOptionGroup(optgroup)}))}setupTemplates(){var self=this,field_label=self.settings.labelField,field_optgroup=self.settings.optgroupLabelField,templates={optgroup:data=>{let optgroup=document.createElement("div");return optgroup.className="optgroup",optgroup.appendChild(data.options),optgroup},optgroup_header:(data,escape)=>'<div class="optgroup-header">'+escape(data[field_optgroup])+"</div>",option:(data,escape)=>"<div>"+escape(data[field_label])+"</div>",item:(data,escape)=>"<div>"+escape(data[field_label])+"</div>",option_create:(data,escape)=>'<div class="create">Add <strong>'+escape(data.input)+"</strong>&hellip;</div>",no_results:()=>'<div class="no-results">No results found</div>',loading:()=>'<div class="spinner"></div>',not_loading:()=>{},dropdown:()=>"<div></div>"};self.settings.render=Object.assign({},templates,self.settings.render)}setupCallbacks(){var key,fn,callbacks={initialize:"onInitialize",change:"onChange",item_add:"onItemAdd",item_remove:"onItemRemove",item_select:"onItemSelect",clear:"onClear",option_add:"onOptionAdd",option_remove:"onOptionRemove",option_clear:"onOptionClear",optgroup_add:"onOptionGroupAdd",optgroup_remove:"onOptionGroupRemove",optgroup_clear:"onOptionGroupClear",dropdown_open:"onDropdownOpen",dropdown_close:"onDropdownClose",type:"onType",load:"onLoad",focus:"onFocus",blur:"onBlur"};for(key in callbacks)(fn=this.settings[callbacks[key]])&&this.on(key,fn)}sync(get_settings=!0){const self=this,settings=get_settings?getSettings(self.input,{delimiter:self.settings.delimiter}):self.settings;self.setupOptions(settings.options,settings.optgroups),self.setValue(settings.items||[],!0),self.lastQuery=null}onClick(){var self=this;if(self.activeItems.length>0)return self.clearActiveItems(),void self.focus();self.isFocused&&self.isOpen?self.blur():self.focus()}onMouseDown(){}onChange(){triggerEvent(this.input,"input"),triggerEvent(this.input,"change")}onPaste(e){var self=this;self.isInputHidden||self.isLocked?preventDefault(e):self.settings.splitOn&&setTimeout((()=>{var pastedText=self.inputValue();if(pastedText.match(self.settings.splitOn)){var splitInput=pastedText.trim().split(self.settings.splitOn);iterate$1(splitInput,(piece=>{hash_key(piece)&&(this.options[piece]?self.addItem(piece):self.createItem(piece))}))}}),0)}onKeyPress(e){var self=this;if(!self.isLocked){var character=String.fromCharCode(e.keyCode||e.which);return self.settings.create&&"multi"===self.settings.mode&&character===self.settings.delimiter?(self.createItem(),void preventDefault(e)):void 0}preventDefault(e)}onKeyDown(e){var self=this;if(self.ignoreHover=!0,self.isLocked)e.keyCode!==KEY_TAB&&preventDefault(e);else{switch(e.keyCode){case KEY_A:if(isKeyDown(KEY_SHORTCUT,e)&&""==self.control_input.value)return preventDefault(e),void self.selectAll();break;case KEY_ESC:return self.isOpen&&(preventDefault(e,!0),self.close()),void self.clearActiveItems();case KEY_DOWN:if(!self.isOpen&&self.hasOptions)self.open();else if(self.activeOption){let next=self.getAdjacent(self.activeOption,1);next&&self.setActiveOption(next)}return void preventDefault(e);case KEY_UP:if(self.activeOption){let prev=self.getAdjacent(self.activeOption,-1);prev&&self.setActiveOption(prev)}return void preventDefault(e);case KEY_RETURN:return void(self.canSelect(self.activeOption)?(self.onOptionSelect(e,self.activeOption),preventDefault(e)):(self.settings.create&&self.createItem()||document.activeElement==self.control_input&&self.isOpen)&&preventDefault(e));case KEY_LEFT:return void self.advanceSelection(-1,e);case KEY_RIGHT:return void self.advanceSelection(1,e);case KEY_TAB:return void(self.settings.selectOnTab&&(self.canSelect(self.activeOption)&&(self.onOptionSelect(e,self.activeOption),preventDefault(e)),self.settings.create&&self.createItem()&&preventDefault(e)));case KEY_BACKSPACE:case KEY_DELETE:return void self.deleteSelection(e)}self.isInputHidden&&!isKeyDown(KEY_SHORTCUT,e)&&preventDefault(e)}}onInput(e){var self=this;if(!self.isLocked){var value=self.inputValue();self.lastValue!==value&&(self.lastValue=value,self.settings.shouldLoad.call(self,value)&&self.load(value),self.refreshOptions(),self.trigger("type",value))}}onOptionHover(evt,option){this.ignoreHover||this.setActiveOption(option,!1)}onFocus(e){var self=this,wasFocused=self.isFocused;if(self.isDisabled)return self.blur(),void preventDefault(e);self.ignoreFocus||(self.isFocused=!0,"focus"===self.settings.preload&&self.preload(),wasFocused||self.trigger("focus"),self.activeItems.length||(self.showInput(),self.refreshOptions(!!self.settings.openOnFocus)),self.refreshState())}onBlur(e){if(!1!==document.hasFocus()){var self=this;if(self.isFocused){self.isFocused=!1,self.ignoreFocus=!1;var deactivate=()=>{self.close(),self.setActiveItem(),self.setCaret(self.items.length),self.trigger("blur")};self.settings.create&&self.settings.createOnBlur?self.createItem(null,deactivate):deactivate()}}}onOptionSelect(evt,option){var value,self=this;option.parentElement&&option.parentElement.matches("[data-disabled]")||(option.classList.contains("create")?self.createItem(null,(()=>{self.settings.closeAfterSelect&&self.close()})):void 0!==(value=option.dataset.value)&&(self.lastQuery=null,self.addItem(value),self.settings.closeAfterSelect&&self.close(),!self.settings.hideSelected&&evt.type&&/click/.test(evt.type)&&self.setActiveOption(option)))}canSelect(option){return!!(this.isOpen&&option&&this.dropdown_content.contains(option))}onItemSelect(evt,item){var self=this;return!self.isLocked&&"multi"===self.settings.mode&&(preventDefault(evt),self.setActiveItem(item,evt),!0)}canLoad(value){return!!this.settings.load&&!this.loadedSearches.hasOwnProperty(value)}load(value){const self=this;if(!self.canLoad(value))return;addClasses(self.wrapper,self.settings.loadingClass),self.loading++;const callback=self.loadCallback.bind(self);self.settings.load.call(self,value,callback)}loadCallback(options,optgroups){const self=this;self.loading=Math.max(self.loading-1,0),self.lastQuery=null,self.clearActiveOption(),self.setupOptions(options,optgroups),self.refreshOptions(self.isFocused&&!self.isInputHidden),self.loading||removeClasses(self.wrapper,self.settings.loadingClass),self.trigger("load",options,optgroups)}preload(){var classList=this.wrapper.classList;classList.contains("preloaded")||(classList.add("preloaded"),this.load(""))}setTextboxValue(value=""){var input=this.control_input;input.value!==value&&(input.value=value,triggerEvent(input,"update"),this.lastValue=value)}getValue(){return this.is_select_tag&&this.input.hasAttribute("multiple")?this.items:this.items.join(this.settings.delimiter)}setValue(value,silent){debounce_events(this,silent?[]:["change"],(()=>{this.clear(silent),this.addItems(value,silent)}))}setMaxItems(value){0===value&&(value=null),this.settings.maxItems=value,this.refreshState()}setActiveItem(item,e){var eventName,i,begin,end,swap,last,self=this;if("single"!==self.settings.mode){if(!item)return self.clearActiveItems(),void(self.isFocused&&self.showInput());if("click"===(eventName=e&&e.type.toLowerCase())&&isKeyDown("shiftKey",e)&&self.activeItems.length){for(last=self.getLastActive(),(begin=Array.prototype.indexOf.call(self.control.children,last))>(end=Array.prototype.indexOf.call(self.control.children,item))&&(swap=begin,begin=end,end=swap),i=begin;i<=end;i++)item=self.control.children[i],-1===self.activeItems.indexOf(item)&&self.setActiveItemClass(item);preventDefault(e)}else"click"===eventName&&isKeyDown(KEY_SHORTCUT,e)||"keydown"===eventName&&isKeyDown("shiftKey",e)?item.classList.contains("active")?self.removeActiveItem(item):self.setActiveItemClass(item):(self.clearActiveItems(),self.setActiveItemClass(item));self.hideInput(),self.isFocused||self.focus()}}setActiveItemClass(item){const self=this,last_active=self.control.querySelector(".last-active");last_active&&removeClasses(last_active,"last-active"),addClasses(item,"active last-active"),self.trigger("item_select",item),-1==self.activeItems.indexOf(item)&&self.activeItems.push(item)}removeActiveItem(item){var idx=this.activeItems.indexOf(item);this.activeItems.splice(idx,1),removeClasses(item,"active")}clearActiveItems(){removeClasses(this.activeItems,"active"),this.activeItems=[]}setActiveOption(option,scroll=!0){option!==this.activeOption&&(this.clearActiveOption(),option&&(this.activeOption=option,setAttr(this.focus_node,{"aria-activedescendant":option.getAttribute("id")}),setAttr(option,{"aria-selected":"true"}),addClasses(option,"active"),scroll&&this.scrollToOption(option)))}scrollToOption(option,behavior){if(!option)return;const content=this.dropdown_content,height_menu=content.clientHeight,scrollTop=content.scrollTop||0,height_item=option.offsetHeight,y=option.getBoundingClientRect().top-content.getBoundingClientRect().top+scrollTop;y+height_item>height_menu+scrollTop?this.scroll(y-height_menu+height_item,behavior):y<scrollTop&&this.scroll(y,behavior)}scroll(scrollTop,behavior){const content=this.dropdown_content;behavior&&(content.style.scrollBehavior=behavior),content.scrollTop=scrollTop,content.style.scrollBehavior=""}clearActiveOption(){this.activeOption&&(removeClasses(this.activeOption,"active"),setAttr(this.activeOption,{"aria-selected":null})),this.activeOption=null,setAttr(this.focus_node,{"aria-activedescendant":null})}selectAll(){const self=this;if("single"===self.settings.mode)return;const activeItems=self.controlChildren();activeItems.length&&(self.hideInput(),self.close(),self.activeItems=activeItems,iterate$1(activeItems,(item=>{self.setActiveItemClass(item)})))}inputState(){var self=this;self.control.contains(self.control_input)&&(setAttr(self.control_input,{placeholder:self.settings.placeholder}),self.activeItems.length>0||!self.isFocused&&self.settings.hidePlaceholder&&self.items.length>0?(self.setTextboxValue(),self.isInputHidden=!0):(self.settings.hidePlaceholder&&self.items.length>0&&setAttr(self.control_input,{placeholder:""}),self.isInputHidden=!1),self.wrapper.classList.toggle("input-hidden",self.isInputHidden))}hideInput(){this.inputState()}showInput(){this.inputState()}inputValue(){return this.control_input.value.trim()}focus(){var self=this;self.isDisabled||(self.ignoreFocus=!0,self.control_input.offsetWidth?self.control_input.focus():self.focus_node.focus(),setTimeout((()=>{self.ignoreFocus=!1,self.onFocus()}),0))}blur(){this.focus_node.blur(),this.onBlur()}getScoreFunction(query){return this.sifter.getScoreFunction(query,this.getSearchOptions())}getSearchOptions(){var settings=this.settings,sort=settings.sortField;return"string"==typeof settings.sortField&&(sort=[{field:settings.sortField}]),{fields:settings.searchField,conjunction:settings.searchConjunction,sort:sort,nesting:settings.nesting}}search(query){var result,calculateScore,self=this,options=this.getSearchOptions();if(self.settings.score&&"function"!=typeof(calculateScore=self.settings.score.call(self,query)))throw new Error('Tom Select "score" setting must be a function that returns a function');return query!==self.lastQuery?(self.lastQuery=query,result=self.sifter.search(query,Object.assign(options,{score:calculateScore})),self.currentResults=result):result=Object.assign({},self.currentResults),self.settings.hideSelected&&(result.items=result.items.filter((item=>{let hashed=hash_key(item.id);return!(hashed&&-1!==self.items.indexOf(hashed))}))),result}refreshOptions(triggerDropdown=!0){var i,j,k,n,optgroup,optgroups,html,has_create_option,active_group,create;const groups={},groups_order=[];var self=this,query=self.inputValue();const same_query=query===self.lastQuery||""==query&&null==self.lastQuery;var results=self.search(query),active_option=null,show_dropdown=self.settings.shouldOpen||!1,dropdown_content=self.dropdown_content;for(same_query&&(active_option=self.activeOption)&&(active_group=active_option.closest("[data-group]")),n=results.items.length,"number"==typeof self.settings.maxOptions&&(n=Math.min(n,self.settings.maxOptions)),n>0&&(show_dropdown=!0),i=0;i<n;i++){let item=results.items[i];if(!item)continue;let opt_value=item.id,option=self.options[opt_value];if(void 0===option)continue;let opt_hash=get_hash(opt_value),option_el=self.getOption(opt_hash,!0);for(self.settings.hideSelected||option_el.classList.toggle("selected",self.items.includes(opt_hash)),optgroup=option[self.settings.optgroupField]||"",j=0,k=(optgroups=Array.isArray(optgroup)?optgroup:[optgroup])&&optgroups.length;j<k;j++){optgroup=optgroups[j],self.optgroups.hasOwnProperty(optgroup)||(optgroup="");let group_fragment=groups[optgroup];void 0===group_fragment&&(group_fragment=document.createDocumentFragment(),groups_order.push(optgroup)),j>0&&(option_el=option_el.cloneNode(!0),setAttr(option_el,{id:option.$id+"-clone-"+j,"aria-selected":null}),option_el.classList.add("ts-cloned"),removeClasses(option_el,"active"),self.activeOption&&self.activeOption.dataset.value==opt_value&&active_group&&active_group.dataset.group===optgroup.toString()&&(active_option=option_el)),group_fragment.appendChild(option_el),groups[optgroup]=group_fragment}}self.settings.lockOptgroupOrder&&groups_order.sort(((a,b)=>{const grp_a=self.optgroups[a],grp_b=self.optgroups[b];return(grp_a&&grp_a.$order||0)-(grp_b&&grp_b.$order||0)})),html=document.createDocumentFragment(),iterate$1(groups_order,(optgroup=>{let group_fragment=groups[optgroup];if(!group_fragment||!group_fragment.children.length)return;let group_heading=self.optgroups[optgroup];if(void 0!==group_heading){let group_options=document.createDocumentFragment(),header=self.render("optgroup_header",group_heading);append(group_options,header),append(group_options,group_fragment);let group_html=self.render("optgroup",{group:group_heading,options:group_options});append(html,group_html)}else append(html,group_fragment)})),dropdown_content.innerHTML="",append(dropdown_content,html),self.settings.highlight&&(removeHighlight(dropdown_content),results.query.length&&results.tokens.length&&iterate$1(results.tokens,(tok=>{highlight(dropdown_content,tok.regex)})));var add_template=template=>{let content=self.render(template,{input:query});return content&&(show_dropdown=!0,dropdown_content.insertBefore(content,dropdown_content.firstChild)),content};if(self.loading?add_template("loading"):self.settings.shouldLoad.call(self,query)?0===results.items.length&&add_template("no_results"):add_template("not_loading"),(has_create_option=self.canCreate(query))&&(create=add_template("option_create")),self.hasOptions=results.items.length>0||has_create_option,show_dropdown){if(results.items.length>0){if(active_option||"single"!==self.settings.mode||null==self.items[0]||(active_option=self.getOption(self.items[0])),!dropdown_content.contains(active_option)){let active_index=0;create&&!self.settings.addPrecedence&&(active_index=1),active_option=self.selectable()[active_index]}}else create&&(active_option=create);triggerDropdown&&!self.isOpen&&(self.open(),self.scrollToOption(active_option,"auto")),self.setActiveOption(active_option)}else self.clearActiveOption(),triggerDropdown&&self.isOpen&&self.close(!1)}selectable(){return this.dropdown_content.querySelectorAll("[data-selectable]")}addOption(data,user_created=!1){const self=this;if(Array.isArray(data))return self.addOptions(data,user_created),!1;const key=hash_key(data[self.settings.valueField]);return null!==key&&!self.options.hasOwnProperty(key)&&(data.$order=data.$order||++self.order,data.$id=self.inputId+"-opt-"+data.$order,self.options[key]=data,self.lastQuery=null,user_created&&(self.userOptions[key]=user_created,self.trigger("option_add",key,data)),key)}addOptions(data,user_created=!1){iterate$1(data,(dat=>{this.addOption(dat,user_created)}))}registerOption(data){return this.addOption(data)}registerOptionGroup(data){var key=hash_key(data[this.settings.optgroupValueField]);return null!==key&&(data.$order=data.$order||++this.order,this.optgroups[key]=data,key)}addOptionGroup(id,data){var hashed_id;data[this.settings.optgroupValueField]=id,(hashed_id=this.registerOptionGroup(data))&&this.trigger("optgroup_add",hashed_id,data)}removeOptionGroup(id){this.optgroups.hasOwnProperty(id)&&(delete this.optgroups[id],this.clearCache(),this.trigger("optgroup_remove",id))}clearOptionGroups(){this.optgroups={},this.clearCache(),this.trigger("optgroup_clear")}updateOption(value,data){const self=this;var item_new,index_item;const value_old=hash_key(value),value_new=hash_key(data[self.settings.valueField]);if(null===value_old)return;const data_old=self.options[value_old];if(null==data_old)return;if("string"!=typeof value_new)throw new Error("Value must be set in option data");const option=self.getOption(value_old),item=self.getItem(value_old);if(data.$order=data.$order||data_old.$order,delete self.options[value_old],self.uncacheValue(value_new),self.options[value_new]=data,option){if(self.dropdown_content.contains(option)){const option_new=self._render("option",data);replaceNode(option,option_new),self.activeOption===option&&self.setActiveOption(option_new)}option.remove()}item&&(-1!==(index_item=self.items.indexOf(value_old))&&self.items.splice(index_item,1,value_new),item_new=self._render("item",data),item.classList.contains("active")&&addClasses(item_new,"active"),replaceNode(item,item_new)),self.lastQuery=null}removeOption(value,silent){const self=this;value=get_hash(value),self.uncacheValue(value),delete self.userOptions[value],delete self.options[value],self.lastQuery=null,self.trigger("option_remove",value),self.removeItem(value,silent)}clearOptions(filter){const boundFilter=(filter||this.clearFilter).bind(this);this.loadedSearches={},this.userOptions={},this.clearCache();const selected={};iterate$1(this.options,((option,key)=>{boundFilter(option,key)&&(selected[key]=option)})),this.options=this.sifter.items=selected,this.lastQuery=null,this.trigger("option_clear")}clearFilter(option,value){return this.items.indexOf(value)>=0}getOption(value,create=!1){const hashed=hash_key(value);if(null===hashed)return null;const option=this.options[hashed];if(null!=option){if(option.$div)return option.$div;if(create)return this._render("option",option)}return null}getAdjacent(option,direction,type="option"){var all,self=this;if(!option)return null;all="item"==type?self.controlChildren():self.dropdown_content.querySelectorAll("[data-selectable]");for(let i=0;i<all.length;i++)if(all[i]==option)return direction>0?all[i+1]:all[i-1];return null}getItem(item){if("object"==typeof item)return item;var value=hash_key(item);return null!==value?this.control.querySelector(`[data-value="${addSlashes(value)}"]`):null}addItems(values,silent){var self=this,items=Array.isArray(values)?values:[values];const last_item=(items=items.filter((x=>-1===self.items.indexOf(x))))[items.length-1];items.forEach((item=>{self.isPending=item!==last_item,self.addItem(item,silent)}))}addItem(value,silent){debounce_events(this,silent?[]:["change","dropdown_close"],(()=>{var item,wasFull;const self=this,inputMode=self.settings.mode,hashed=hash_key(value);if((!hashed||-1===self.items.indexOf(hashed)||("single"===inputMode&&self.close(),"single"!==inputMode&&self.settings.duplicates))&&null!==hashed&&self.options.hasOwnProperty(hashed)&&("single"===inputMode&&self.clear(silent),"multi"!==inputMode||!self.isFull())){if(item=self._render("item",self.options[hashed]),self.control.contains(item)&&(item=item.cloneNode(!0)),wasFull=self.isFull(),self.items.splice(self.caretPos,0,hashed),self.insertAtCaret(item),self.isSetup){if(!self.isPending&&self.settings.hideSelected){let option=self.getOption(hashed),next=self.getAdjacent(option,1);next&&self.setActiveOption(next)}self.isPending||self.settings.closeAfterSelect||self.refreshOptions(self.isFocused&&"single"!==inputMode),0!=self.settings.closeAfterSelect&&self.isFull()?self.close():self.isPending||self.positionDropdown(),self.trigger("item_add",hashed,item),self.isPending||self.updateOriginalInput({silent:silent})}(!self.isPending||!wasFull&&self.isFull())&&(self.inputState(),self.refreshState())}}))}removeItem(item=null,silent){const self=this;if(!(item=self.getItem(item)))return;var i,idx;const value=item.dataset.value;i=nodeIndex(item),item.remove(),item.classList.contains("active")&&(idx=self.activeItems.indexOf(item),self.activeItems.splice(idx,1),removeClasses(item,"active")),self.items.splice(i,1),self.lastQuery=null,!self.settings.persist&&self.userOptions.hasOwnProperty(value)&&self.removeOption(value,silent),i<self.caretPos&&self.setCaret(self.caretPos-1),self.updateOriginalInput({silent:silent}),self.refreshState(),self.positionDropdown(),self.trigger("item_remove",value,item)}createItem(input=null,callback=(()=>{})){3===arguments.length&&(callback=arguments[2]),"function"!=typeof callback&&(callback=()=>{});var output,self=this,caret=self.caretPos;if(input=input||self.inputValue(),!self.canCreate(input))return callback(),!1;self.lock();var created=!1,create=data=>{if(self.unlock(),!data||"object"!=typeof data)return callback();var value=hash_key(data[self.settings.valueField]);if("string"!=typeof value)return callback();self.setTextboxValue(),self.addOption(data,!0),self.setCaret(caret),self.addItem(value),callback(data),created=!0};return output="function"==typeof self.settings.create?self.settings.create.call(this,input,create):{[self.settings.labelField]:input,[self.settings.valueField]:input},created||create(output),!0}refreshItems(){var self=this;self.lastQuery=null,self.isSetup&&self.addItems(self.items),self.updateOriginalInput(),self.refreshState()}refreshState(){const self=this;self.refreshValidityState();const isFull=self.isFull(),isLocked=self.isLocked;self.wrapper.classList.toggle("rtl",self.rtl);const wrap_classList=self.wrapper.classList;wrap_classList.toggle("focus",self.isFocused),wrap_classList.toggle("disabled",self.isDisabled),wrap_classList.toggle("required",self.isRequired),wrap_classList.toggle("invalid",!self.isValid),wrap_classList.toggle("locked",isLocked),wrap_classList.toggle("full",isFull),wrap_classList.toggle("input-active",self.isFocused&&!self.isInputHidden),wrap_classList.toggle("dropdown-active",self.isOpen),wrap_classList.toggle("has-options",isEmptyObject(self.options)),wrap_classList.toggle("has-items",self.items.length>0)}refreshValidityState(){var self=this;self.input.validity&&(self.isValid=self.input.validity.valid,self.isInvalid=!self.isValid)}isFull(){return null!==this.settings.maxItems&&this.items.length>=this.settings.maxItems}updateOriginalInput(opts={}){const self=this;var option,label;const empty_option=self.input.querySelector('option[value=""]');if(self.is_select_tag){const selected=[],has_selected=self.input.querySelectorAll("option:checked").length;function AddSelected(option_el,value,label){return option_el||(option_el=getDom('<option value="'+escape_html(value)+'">'+escape_html(label)+"</option>")),option_el!=empty_option&&self.input.append(option_el),selected.push(option_el),(option_el!=empty_option||has_selected>0)&&(option_el.selected=!0),option_el}self.input.querySelectorAll("option:checked").forEach((option_el=>{option_el.selected=!1})),0==self.items.length&&"single"==self.settings.mode?AddSelected(empty_option,"",""):self.items.forEach((value=>{option=self.options[value],label=option[self.settings.labelField]||"",selected.includes(option.$option)?AddSelected(self.input.querySelector(`option[value="${addSlashes(value)}"]:not(:checked)`),value,label):option.$option=AddSelected(option.$option,value,label)}))}else self.input.value=self.getValue();self.isSetup&&(opts.silent||self.trigger("change",self.getValue()))}open(){var self=this;self.isLocked||self.isOpen||"multi"===self.settings.mode&&self.isFull()||(self.isOpen=!0,setAttr(self.focus_node,{"aria-expanded":"true"}),self.refreshState(),applyCSS(self.dropdown,{visibility:"hidden",display:"block"}),self.positionDropdown(),applyCSS(self.dropdown,{visibility:"visible",display:"block"}),self.focus(),self.trigger("dropdown_open",self.dropdown))}close(setTextboxValue=!0){var self=this,trigger=self.isOpen;setTextboxValue&&(self.setTextboxValue(),"single"===self.settings.mode&&self.items.length&&self.hideInput()),self.isOpen=!1,setAttr(self.focus_node,{"aria-expanded":"false"}),applyCSS(self.dropdown,{display:"none"}),self.settings.hideSelected&&self.clearActiveOption(),self.refreshState(),trigger&&self.trigger("dropdown_close",self.dropdown)}positionDropdown(){if("body"===this.settings.dropdownParent){var context=this.control,rect=context.getBoundingClientRect(),top=context.offsetHeight+rect.top+window.scrollY,left=rect.left+window.scrollX;applyCSS(this.dropdown,{width:rect.width+"px",top:top+"px",left:left+"px"})}}clear(silent){var self=this;if(self.items.length){var items=self.controlChildren();iterate$1(items,(item=>{self.removeItem(item,!0)})),self.showInput(),silent||self.updateOriginalInput(),self.trigger("clear")}}insertAtCaret(el){const self=this,caret=self.caretPos,target=self.control;target.insertBefore(el,target.children[caret]||null),self.setCaret(caret+1)}deleteSelection(e){var direction,selection,caret,tail,self=this;direction=e&&e.keyCode===KEY_BACKSPACE?-1:1,selection=getSelection(self.control_input);const rm_items=[];if(self.activeItems.length)tail=getTail(self.activeItems,direction),caret=nodeIndex(tail),direction>0&&caret++,iterate$1(self.activeItems,(item=>rm_items.push(item)));else if((self.isFocused||"single"===self.settings.mode)&&self.items.length){const items=self.controlChildren();let rm_item;direction<0&&0===selection.start&&0===selection.length?rm_item=items[self.caretPos-1]:direction>0&&selection.start===self.inputValue().length&&(rm_item=items[self.caretPos]),void 0!==rm_item&&rm_items.push(rm_item)}if(!self.shouldDelete(rm_items,e))return!1;for(preventDefault(e,!0),void 0!==caret&&self.setCaret(caret);rm_items.length;)self.removeItem(rm_items.pop());return self.showInput(),self.positionDropdown(),self.refreshOptions(!1),!0}shouldDelete(items,evt){const values=items.map((item=>item.dataset.value));return!(!values.length||"function"==typeof this.settings.onDelete&&!1===this.settings.onDelete(values,evt))}advanceSelection(direction,e){var last_active,adjacent,self=this;self.rtl&&(direction*=-1),self.inputValue().length||(isKeyDown(KEY_SHORTCUT,e)||isKeyDown("shiftKey",e)?(adjacent=(last_active=self.getLastActive(direction))?last_active.classList.contains("active")?self.getAdjacent(last_active,direction,"item"):last_active:direction>0?self.control_input.nextElementSibling:self.control_input.previousElementSibling)&&(adjacent.classList.contains("active")&&self.removeActiveItem(last_active),self.setActiveItemClass(adjacent)):self.moveCaret(direction))}moveCaret(direction){}getLastActive(direction){let last_active=this.control.querySelector(".last-active");if(last_active)return last_active;var result=this.control.querySelectorAll(".active");return result?getTail(result,direction):void 0}setCaret(new_pos){this.caretPos=this.items.length}controlChildren(){return Array.from(this.control.querySelectorAll("[data-ts-item]"))}lock(){this.isLocked=!0,this.refreshState()}unlock(){this.isLocked=!1,this.refreshState()}disable(){var self=this;self.input.disabled=!0,self.control_input.disabled=!0,self.focus_node.tabIndex=-1,self.isDisabled=!0,this.close(),self.lock()}enable(){var self=this;self.input.disabled=!1,self.control_input.disabled=!1,self.focus_node.tabIndex=self.tabIndex,self.isDisabled=!1,self.unlock()}destroy(){var self=this,revertSettings=self.revertSettings;self.trigger("destroy"),self.off(),self.wrapper.remove(),self.dropdown.remove(),self.input.innerHTML=revertSettings.innerHTML,self.input.tabIndex=revertSettings.tabIndex,removeClasses(self.input,"tomselected","ts-hidden-accessible"),self._destroy(),delete self.input.tomselect}render(templateName,data){var id,html;const self=this;if("function"!=typeof this.settings.render[templateName])return null;if(null==(html=self.settings.render[templateName].call(this,data,escape_html)))return html;if(html=getDom(html),"option"===templateName||"option_create"===templateName?data[self.settings.disabledField]?setAttr(html,{"aria-disabled":"true"}):setAttr(html,{"data-selectable":""}):"optgroup"===templateName&&(id=data.group[self.settings.optgroupValueField],setAttr(html,{"data-group":id}),data.group[self.settings.disabledField]&&setAttr(html,{"data-disabled":""})),"option"===templateName||"item"===templateName){const value=get_hash(data[self.settings.valueField]);setAttr(html,{"data-value":value}),"item"===templateName?(addClasses(html,self.settings.itemClass),setAttr(html,{"data-ts-item":""})):(addClasses(html,self.settings.optionClass),setAttr(html,{role:"option",id:data.$id}),data.$div=html,self.options[value]=data)}return html}_render(templateName,data){const html=this.render(templateName,data);if(null==html)throw"HTMLElement expected";return html}clearCache(){iterate$1(this.options,(option=>{option.$div&&(option.$div.remove(),delete option.$div)}))}uncacheValue(value){const option_el=this.getOption(value);option_el&&option_el.remove()}canCreate(input){return this.settings.create&&input.length>0&&this.settings.createFilter.call(this,input)}hook(when,method,new_fn){var self=this,orig_method=self[method];self[method]=function(){var result,result_new;return"after"===when&&(result=orig_method.apply(self,arguments)),result_new=new_fn.apply(self,arguments),"instead"===when?result_new:("before"===when&&(result=orig_method.apply(self,arguments)),result)}}}function change_listener(){addEvent(this.input,"change",(()=>{this.sync()}))}function checkbox_options(){var self=this,orig_onOptionSelect=self.onOptionSelect;self.settings.hideSelected=!1;var UpdateCheckbox=function(option){setTimeout((()=>{var checkbox=option.querySelector("input");checkbox instanceof HTMLInputElement&&(option.classList.contains("selected")?checkbox.checked=!0:checkbox.checked=!1)}),1)};self.hook("after","setupTemplates",(()=>{var orig_render_option=self.settings.render.option;self.settings.render.option=(data,escape_html)=>{var rendered=getDom(orig_render_option.call(self,data,escape_html)),checkbox=document.createElement("input");checkbox.addEventListener("click",(function(evt){preventDefault(evt)})),checkbox.type="checkbox";const hashed=hash_key(data[self.settings.valueField]);return hashed&&self.items.indexOf(hashed)>-1&&(checkbox.checked=!0),rendered.prepend(checkbox),rendered}})),self.on("item_remove",(value=>{var option=self.getOption(value);option&&(option.classList.remove("selected"),UpdateCheckbox(option))})),self.on("item_add",(value=>{var option=self.getOption(value);option&&UpdateCheckbox(option)})),self.hook("instead","onOptionSelect",((evt,option)=>{if(option.classList.contains("selected"))return option.classList.remove("selected"),self.removeItem(option.dataset.value),self.refreshOptions(),void preventDefault(evt,!0);orig_onOptionSelect.call(self,evt,option),UpdateCheckbox(option)}))}function clear_button(userOptions){const self=this,options=Object.assign({className:"clear-button",title:"Clear All",html:data=>`<div class="${data.className}" title="${data.title}">&#10799;</div>`},userOptions);self.on("initialize",(()=>{var button=getDom(options.html(options));button.addEventListener("click",(evt=>{self.isDisabled||(self.clear(),"single"===self.settings.mode&&self.settings.allowEmptyOption&&self.addItem(""),evt.preventDefault(),evt.stopPropagation())})),self.control.appendChild(button)}))}function drag_drop(){var self=this;if(!$.fn.sortable)throw new Error('The "drag_drop" plugin requires jQuery UI "sortable".');if("multi"===self.settings.mode){var orig_lock=self.lock,orig_unlock=self.unlock;self.hook("instead","lock",(()=>{var sortable=$(self.control).data("sortable");return sortable&&sortable.disable(),orig_lock.call(self)})),self.hook("instead","unlock",(()=>{var sortable=$(self.control).data("sortable");return sortable&&sortable.enable(),orig_unlock.call(self)})),self.on("initialize",(()=>{var $control=$(self.control).sortable({items:"[data-value]",forcePlaceholderSize:!0,disabled:self.isLocked,start:(e,ui)=>{ui.placeholder.css("width",ui.helper.css("width")),$control.css({overflow:"visible"})},stop:()=>{$control.css({overflow:"hidden"});var values=[];$control.children("[data-value]").each((function(){this.dataset.value&&values.push(this.dataset.value)})),self.setValue(values)}})}))}}function dropdown_header(userOptions){const self=this,options=Object.assign({title:"Untitled",headerClass:"dropdown-header",titleRowClass:"dropdown-header-title",labelClass:"dropdown-header-label",closeClass:"dropdown-header-close",html:data=>'<div class="'+data.headerClass+'"><div class="'+data.titleRowClass+'"><span class="'+data.labelClass+'">'+data.title+'</span><a class="'+data.closeClass+'">&times;</a></div></div>'},userOptions);self.on("initialize",(()=>{var header=getDom(options.html(options)),close_link=header.querySelector("."+options.closeClass);close_link&&close_link.addEventListener("click",(evt=>{preventDefault(evt,!0),self.close()})),self.dropdown.insertBefore(header,self.dropdown.firstChild)}))}function caret_position(){var self=this;self.hook("instead","setCaret",(new_pos=>{"single"!==self.settings.mode&&self.control.contains(self.control_input)?(new_pos=Math.max(0,Math.min(self.items.length,new_pos)))==self.caretPos||self.isPending||self.controlChildren().forEach(((child,j)=>{j<new_pos?self.control_input.insertAdjacentElement("beforebegin",child):self.control.appendChild(child)})):new_pos=self.items.length,self.caretPos=new_pos})),self.hook("instead","moveCaret",(direction=>{if(!self.isFocused)return;const last_active=self.getLastActive(direction);if(last_active){const idx=nodeIndex(last_active);self.setCaret(direction>0?idx+1:idx),self.setActiveItem(),removeClasses(last_active,"last-active")}else self.setCaret(self.caretPos+direction)}))}function dropdown_input(){const self=this;self.settings.shouldOpen=!0,self.hook("before","setup",(()=>{self.focus_node=self.control,addClasses(self.control_input,"dropdown-input");const div=getDom('<div class="dropdown-input-wrap">');div.append(self.control_input),self.dropdown.insertBefore(div,self.dropdown.firstChild);const placeholder=getDom('<input class="items-placeholder" tabindex="-1" />');placeholder.placeholder=self.settings.placeholder||"",self.control.append(placeholder)})),self.on("initialize",(()=>{self.control_input.addEventListener("keydown",(evt=>{switch(evt.keyCode){case KEY_ESC:return self.isOpen&&(preventDefault(evt,!0),self.close()),void self.clearActiveItems();case KEY_TAB:self.focus_node.tabIndex=-1}return self.onKeyDown.call(self,evt)})),self.on("blur",(()=>{self.focus_node.tabIndex=self.isDisabled?-1:self.tabIndex})),self.on("dropdown_open",(()=>{self.control_input.focus()}));const orig_onBlur=self.onBlur;self.hook("instead","onBlur",(evt=>{if(!evt||evt.relatedTarget!=self.control_input)return orig_onBlur.call(self)})),addEvent(self.control_input,"blur",(()=>self.onBlur())),self.hook("before","close",(()=>{self.isOpen&&self.focus_node.focus({preventScroll:!0})}))}))}function input_autogrow(){var self=this;self.on("initialize",(()=>{var test_input=document.createElement("span"),control=self.control_input;test_input.style.cssText="position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ",self.wrapper.appendChild(test_input);var transfer_styles=["letterSpacing","fontSize","fontFamily","fontWeight","textTransform"];for(const style_name of transfer_styles)test_input.style[style_name]=control.style[style_name];var resize=()=>{test_input.textContent=control.value,control.style.width=test_input.clientWidth+"px"};resize(),self.on("update item_add item_remove",resize),addEvent(control,"input",resize),addEvent(control,"keyup",resize),addEvent(control,"blur",resize),addEvent(control,"update",resize)}))}function no_backspace_delete(){var self=this,orig_deleteSelection=self.deleteSelection;this.hook("instead","deleteSelection",(evt=>!!self.activeItems.length&&orig_deleteSelection.call(self,evt)))}function no_active_items(){this.hook("instead","setActiveItem",(()=>{})),this.hook("instead","selectAll",(()=>{}))}function optgroup_columns(){var self=this,orig_keydown=self.onKeyDown;self.hook("instead","onKeyDown",(evt=>{var index,option,options,optgroup;if(!self.isOpen||evt.keyCode!==KEY_LEFT&&evt.keyCode!==KEY_RIGHT)return orig_keydown.call(self,evt);self.ignoreHover=!0,optgroup=parentMatch(self.activeOption,"[data-group]"),index=nodeIndex(self.activeOption,"[data-selectable]"),optgroup&&(optgroup=evt.keyCode===KEY_LEFT?optgroup.previousSibling:optgroup.nextSibling)&&(option=(options=optgroup.querySelectorAll("[data-selectable]"))[Math.min(options.length-1,index)])&&self.setActiveOption(option)}))}function remove_button(userOptions){const options=Object.assign({label:"&times;",title:"Remove",className:"remove",append:!0},userOptions);var self=this;if(options.append){var html='<a href="javascript:void(0)" class="'+options.className+'" tabindex="-1" title="'+escape_html(options.title)+'">'+options.label+"</a>";self.hook("after","setupTemplates",(()=>{var orig_render_item=self.settings.render.item;self.settings.render.item=(data,escape)=>{var item=getDom(orig_render_item.call(self,data,escape)),close_button=getDom(html);return item.appendChild(close_button),addEvent(close_button,"mousedown",(evt=>{preventDefault(evt,!0)})),addEvent(close_button,"click",(evt=>{preventDefault(evt,!0),self.isLocked||self.shouldDelete([item],evt)&&(self.removeItem(item),self.refreshOptions(!1),self.inputState())})),item}}))}}function restore_on_backspace(userOptions){const self=this,options=Object.assign({text:option=>option[self.settings.labelField]},userOptions);self.on("item_remove",(function(value){if(self.isFocused&&""===self.control_input.value.trim()){var option=self.options[value];option&&self.setTextboxValue(options.text.call(self,option))}}))}function virtual_scroll(){const self=this,orig_canLoad=self.canLoad,orig_clearActiveOption=self.clearActiveOption,orig_loadCallback=self.loadCallback;var dropdown_content,load_more_opt,pagination={},loading_more=!1,default_values=[];if(self.settings.shouldLoadMore||(self.settings.shouldLoadMore=()=>{if(dropdown_content.clientHeight/(dropdown_content.scrollHeight-dropdown_content.scrollTop)>.9)return!0;if(self.activeOption){var selectable=self.selectable();if(Array.from(selectable).indexOf(self.activeOption)>=selectable.length-2)return!0}return!1}),!self.settings.firstUrl)throw"virtual_scroll plugin requires a firstUrl() method";self.settings.sortField=[{field:"$order"},{field:"$score"}];const canLoadMore=query=>!("number"==typeof self.settings.maxOptions&&dropdown_content.children.length>=self.settings.maxOptions||!(query in pagination)||!pagination[query]),clearFilter=(option,value)=>self.items.indexOf(value)>=0||default_values.indexOf(value)>=0;self.setNextUrl=(value,next_url)=>{pagination[value]=next_url},self.getUrl=query=>{if(query in pagination){const next_url=pagination[query];return pagination[query]=!1,next_url}return pagination={},self.settings.firstUrl.call(self,query)},self.hook("instead","clearActiveOption",(()=>{if(!loading_more)return orig_clearActiveOption.call(self)})),self.hook("instead","canLoad",(query=>query in pagination?canLoadMore(query):orig_canLoad.call(self,query))),self.hook("instead","loadCallback",((options,optgroups)=>{if(loading_more){if(load_more_opt){const first_option=options[0];void 0!==first_option&&(load_more_opt.dataset.value=first_option[self.settings.valueField])}}else self.clearOptions(clearFilter);orig_loadCallback.call(self,options,optgroups),loading_more=!1})),self.hook("after","refreshOptions",(()=>{const query=self.lastValue;var option;canLoadMore(query)?(option=self.render("loading_more",{query:query}))&&(option.setAttribute("data-selectable",""),load_more_opt=option):query in pagination&&!dropdown_content.querySelector(".no-results")&&(option=self.render("no_more_results",{query:query})),option&&(addClasses(option,self.settings.optionClass),dropdown_content.append(option))})),self.on("initialize",(()=>{default_values=Object.keys(self.options),dropdown_content=self.dropdown_content,self.settings.render=Object.assign({},{loading_more:()=>'<div class="loading-more-results">Loading more results ... </div>',no_more_results:()=>'<div class="no-more-results">No more results</div>'},self.settings.render),dropdown_content.addEventListener("scroll",(()=>{self.settings.shouldLoadMore.call(self)&&canLoadMore(self.lastValue)&&(loading_more||(loading_more=!0,self.load.call(self,self.lastValue)))}))}))}return TomSelect.define("change_listener",change_listener),TomSelect.define("checkbox_options",checkbox_options),TomSelect.define("clear_button",clear_button),TomSelect.define("drag_drop",drag_drop),TomSelect.define("dropdown_header",dropdown_header),TomSelect.define("caret_position",caret_position),TomSelect.define("dropdown_input",dropdown_input),TomSelect.define("input_autogrow",input_autogrow),TomSelect.define("no_backspace_delete",no_backspace_delete),TomSelect.define("no_active_items",no_active_items),TomSelect.define("optgroup_columns",optgroup_columns),TomSelect.define("remove_button",remove_button),TomSelect.define("restore_on_backspace",restore_on_backspace),TomSelect.define("virtual_scroll",virtual_scroll),TomSelect}()}},__webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(void 0!==cachedModule)return cachedModule.exports;var module=__webpack_module_cache__[moduleId]={exports:{}};return __webpack_modules__[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.exports}__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,{a:getter}),getter},__webpack_require__.d=function(exports,definition){for(var key in definition)__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})},__webpack_require__.o=function(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)},__webpack_require__.r=function(exports){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})};var __webpack_exports__={};!function(){"use strict";__webpack_require__.r(__webpack_exports__);var tom_select__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tom-select/dist/js/tom-select.complete.js"),tom_select__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(tom_select__WEBPACK_IMPORTED_MODULE_0__);const genderSelectTyssart=document.getElementById("GenderType"),genderSelectForijat=document.getElementById("Gender");let femaleArr=[],maleArr=[];const defulteOption={id:"",title:"الكل"};if(femaleArr.push(defulteOption),maleArr.push(defulteOption),genderSelectTyssart){const maritalStatusSelect=new(tom_select__WEBPACK_IMPORTED_MODULE_0___default())("#MaritalStatusId",{plugins:["no_backspace_delete"],allowEmptyOption:!0,create:!1,maxItems:1,closeAfterSelect:!0,valueField:"id",labelField:"title",searchField:"title",placeholder:"اختر"});new(tom_select__WEBPACK_IMPORTED_MODULE_0___default())("#GenderType",{plugins:["no_backspace_delete"],onChange:updateSelect,allowEmptyOption:!0,create:!1,maxItems:1,closeAfterSelect:!0,placeholder:"اختر"}),femaleArr.push(defulteOption);for(let option in maritalStatusSelect.options){let data={id:maritalStatusSelect.options[option].id,title:maritalStatusSelect.options[option].title};option<3?maleArr.push(data):femaleArr.push(data)}function updateSelect(){console.log("genderSelectTyssart"),checkGender(genderSelectTyssart,maritalStatusSelect)}Gender=genderSelectTyssart,(maritalStatus=maritalStatusSelect).clearOptions(),1==Gender.value?maritalStatus.addOptions(maleArr):2==Gender.value?maritalStatus.addOptions(femaleArr):maritalStatus.addOption(defulteOption)}var Gender,maritalStatus;if(genderSelectForijat){const maritalStatusSelect=new(tom_select__WEBPACK_IMPORTED_MODULE_0___default())("#MaritalStatus",{plugins:["no_backspace_delete"],allowEmptyOption:!0,create:!1,maxItems:1,closeAfterSelect:!0,valueField:"id",labelField:"title",searchField:"title",placeholder:"اختر"});new(tom_select__WEBPACK_IMPORTED_MODULE_0___default())("#Gender",{onChange:updateSelect,allowEmptyOption:!0,create:!1,maxItems:1,closeAfterSelect:!0,placeholder:"اختر"});for(let option in MaritalStatuses){let data={id:MaritalStatuses[option].StatusCode,title:MaritalStatuses[option].NameArabic};1==MaritalStatuses[option].GenderType?maleArr.push(data):2==MaritalStatuses[option].GenderType&&femaleArr.push(data)}function updateSelect(){checkGender(genderSelectForijat,maritalStatusSelect)}}function updateSelectOptions(options,maritalStatus){maritalStatus.clear(),maritalStatus.clearOptions(),maritalStatus.addOptions(options),maritalStatus.addItem(defulteOption.id)}function checkGender(Gender,maritalStatus){1==Gender.value?updateSelectOptions(maleArr,maritalStatus):2==Gender.value?updateSelectOptions(femaleArr,maritalStatus):updateSelectOptions([defulteOption],maritalStatus)}}()}();
//# sourceMappingURL=filterGender.js.map